// Utility Mixins
//
// Weight: -90
//
// Styleguide mixins

// u-visually-hidden()
//
// Used to visually hide components but keep them visible to screenreaders. Also includes a utility class .u-visually-hidden.
//
// Styleguide mixins.visually-hidden

@mixin u-visually_hidden {
  position: absolute !important;
  top: auto;
  left: -9999px !important;
}

.u-visually-hidden {
  @include u-visually-hidden();
}

.u-float-left {
  float: left;
}

.u-float-right {
  float: right;
}

.is-disabled,
[disabled] {
  opacity: .5;
  cursor: default;
}

.u-no-padding {
  padding: 0 !important;
}

.u-no-border {
  border-bottom: none;
}

.u-no-margin {
  margin: 0 !important;
}

.u-blank-space {
  display: inline-block;
  border-bottom: 1px solid $inverse;
  width: 5rem;
}

// u-font-color()
//
// Used to set the color of all child elements
//
// $color     - The color of the font and (if applicable) border-color
//
// Styleguide mixins.font-color

@mixin u-font-color($color) {
  color: $color;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  a,
  p,
  span,
  li,
  dt,
  dd,
  label,
  blockquote,
  .label {
    color: $color;
  }

  h1,
  .h1,
  h6,
  .h6
  a {
    border-color: $color;
  }

  .t-ruled {
    border-color: $color;
  }

  .button--primary {
    color: $primary;
    border-color: transparent;
  }

  .button--secondary {
    color: $secondary;
    border-color: transparent;
  }

  .button:hover {
    border-color: transparent;
  }
}

// u-form-color()
//
// Used to set the color of the form elements
//
// $background-color      - The color of the background of the inputs
// $contrast-color        - Border and font colors
// $focus-color           - Focus color
// $icon-color            - A string that will be appended to the background-image url for checkboxes (e.g. 'primary', 'secondary')
// $fill-color            - Color for checkbox and radio backgrounds when checked
//
// Styleguide mixins.font-colo

@mixin u-form-color($background-color, $contrast-color, $focus-color, $icon-color, $fill-color) {
  #{$all-text-inputs},
  select,
  select[multiple=multiple],
  textarea {
    color: $contrast-color;
    border-color: $contrast-color;
    background-color: $background-color;
  }

  #{$all-text-inputs} {
    @include placeholder() {
      color: $contrast-color;
    }
  }

  select {
    background-image: url('../img/i-down--' + $icon-color + '-contrast.png');
    background-image: url('../img/i-down--' + $icon-color + '-contrast.svg');
  }

  [type="checkbox"] + label::before,
  [type="radio"] + label::before {
    background-color: $background-color;
    border-color: $contrast-color;
  }

  [type="checkbox"]:checked + label::before,
  [type="radio"]:checked + label::before {
    background-color: $fill-color;
  }

  [type="checkbox"]:checked + label::before {
    background-image: url('../img/i-check--' + $icon-color + '.png');
    background-image: url('../img/i-check--' + $icon-color + '.svg');
  }

  [type="checkbox"]:focus + label::before {
    box-shadow: 0 0 0 1px #fff, 0 0 0 3px $focus-color;
  }

  .tt-dropdown-menu {
    border-color: $contrast-color;
  }
}

// u-bg--primary()
//
// Used to set generate all of the styles for a bg--primary element
//
// Styleguide mixins.bg-primary

@mixin u-bg--primary() {
  @include u-font-color($gray-lightest);
  @include u-form-color($primary, $primary-contrast, $gray-lightest, 'primary', $primary-contrast);
  background-color: $primary;

  a {
    border-bottom-color: $gray-lightest;

    &:hover {
      border-bottom-color: $primary-contrast;
    }
  }

  .term {
    @include u-background-image('i-term--cream', 100% 40%);
  }

  .tooltip__trigger {
    @include u-background-image('i-info--cream--small', 100% 50%);
  }

}

// u-bg--primary()
//
// Used to set generate all of the styles for a bg--secondary element
//
// Styleguide mixins.bg-secondary

@mixin u-bg--secondary(){
  @include u-font-color($gray-lightest);
  @include u-form-color($secondary, $secondary-contrast, $gray-lightest, 'secondary', $secondary-contrast);
  background-color: $secondary;

  a {
    border-bottom-color: $gray-lightest;

    &:hover {
      border-bottom-color: $secondary-contrast;
    }
  }

  .term {
    @include u-background-image('i-term--neutral', 100% 0);
  }
}

@mixin u-bg--neutral(){
  @include u-font-color($base);
  @include u-form-color($inverse, $primary, $primary-contrast, 'neutral', $primary);
  background-color: $gray-lightest;

  a {
    &:hover {
      border-bottom-color: $primary-contrast;
    }
  }
}

// u-bg--primary()
//
// Used to set generate all of the styles for a bg--dark element
//
// Styleguide mixins.bg-dark

@mixin u-bg--dark(){
  @include u-font-color($gray-lightest);
  @include u-form-color($gray-darkest, $secondary-contrast, $gray-lightest, 'secondary', $secondary-contrast);
  background-color: $gray-darkest;

  a {
    border-bottom-color: $gray-lightest;

    &:hover {
      border-bottom-color: $secondary-contrast;
    }
  }
}

@mixin u-bg--neutral(){
  @include u-font-color($base);
  @include u-form-color($inverse, $primary, $primary-contrast, 'neutral', $primary);
  background-color: $gray-lightest;

  a {
    &:hover {
      border-bottom-color: $primary-contrast;
    }
  }
}

// u-truncate()
//
// Truncate text to a single line with an ellipsis
// Thanks to http://css-tricks.com/snippets/css/truncate-string-with-ellipsis/
//
// Styleguide mixins.truncate
@mixin u-truncate() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// u-bg-background-image()
//
// Generates everything you need for a background image
//
// $image     - Name of the image file. It will create two calls, one to a png and one to an svg
// $position: - Will set the background-position property, defaults to 50% 50%
//
// Styleguide mixins.background-image

@mixin u-background-image($image, $position: 50% 50%) {
  background-image: url('../img/' + $image + '.png');
  background-image: url('../img/' + $image + '.svg');
  background-repeat: no-repeat;
  background-position: $position;
}


// u-icon-button()
//
// $image         - Name of the image file
// $color         - Border color
// $side          - Icon on the left or right? Defaults to left
// $width         - Width of the icon, defaults to 2rem
// $height        - Height of the icon, defaults to 2rem
//
// Styleguide mixins.icon-button

@mixin u-icon-button($image, $color, $side: left, $width: 2rem, $height: 2rem) {
  position: relative;
  @if $side == left {
    padding-left: $width + 2rem;
  }
  @else {
    padding-right: $width + 2rem;
  }

  &:after {
    @include u-background-image($image);
    background-size: contain;
    content: '';
    display: block;
    height: $height;
    width: $width;
    position: absolute;
    top: 50%;
    margin-top: -1 * ($height / 2);

    @if $side == left {
      left: 1rem;
      border-right: 1px solid $color;
    }
    @else {
      right: 1rem;
      border-left: 1px solid $color;
    }
  }

}
